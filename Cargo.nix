# Generated by carnix 0.7.2: carnix nix --src ./
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  laptop_stats = f: laptop_stats_0_1_0 { features = laptop_stats_0_1_0_features { laptop_stats_0_1_0 = f; }; };
  __all = [ (laptop_stats {}) ];
  ansi_term_0_10_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.10.2";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "07k0hfmlhv43lihyxb9d81l5mq5zlpqvv30dkfd3knmv2ginasn9";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.10";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "1h26lssj8rwaz0xhwwm5a645r49yly211amfmd243m3m0jl49i2c";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1hsl1fgjpgl0ssg471m827svlfij8yhax0l6ldaqkrip78049fz3";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
    inherit dependencies buildDependencies features;
  };
  bytes_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bytes";
    version = "0.4.5";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "09grypiv7wnqbhsmini1i77d5bwcna6nzp3yhh9i02hn37ma58vn";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "193pwqgh79w6k0k29svyds5nnlrwx44myqyrw605d5jj4yk2zmpr";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  clap_2_30_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.30.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1mqakqrlqr127v1whwhv59bsxb6d7f0mi61c00fg8f83paxbs3y5";
    inherit dependencies buildDependencies features;
  };
  failure_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure";
    version = "0.1.1";
    authors = [ "Without Boats <boats@mozilla.com>" ];
    sha256 = "0gf9cmkm9kc163sszgjksqp5pcgj689lnf2104nn4h4is18nhigk";
    inherit dependencies buildDependencies features;
  };
  failure_derive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure_derive";
    version = "0.1.1";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "1w895q4pbyx3rwnhgjwfcayk9ghbi166wc1c3553qh8zkbz52k8i";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  fnv_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fnv";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.2.1";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0yd4rd7ql1vdr349p6vgq2dnwmpylky1kjp8g1zgvp250jxrhddb";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.2";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "1zhxksplv52nlqd4j21h8462b5s913ngnhd303qsxsxn8dpaxgkq";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.2.0";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "1yrqsrjwlhl3di6prxf5xmyd82gyjaysldbka5wwk83z11mpqh4w";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.2";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0p8mrhg8pxk4kpzziv6nlxd8xgkj916gsg2b0x2mvf9dxwzrqhnk";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.17";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1awrl30p1yqc0l9hbhng0f2873h2wr2244caj20b706plwqmcw0y";
    inherit dependencies buildDependencies features;
  };
  futures_cpupool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-cpupool";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
    inherit dependencies buildDependencies features;
  };
  httparse_1_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.2.3";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "13x17y9bip0bija06y4vwpgh8jdmdi2gsvjq02kyfy0fbp5cqa93";
    inherit dependencies buildDependencies features;
  };
  hyper_0_11_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.11.10";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "145rm1w48yqpm1964nc6j1f6h48f17q68li5x0ircn9qm59vq1q1";
    inherit dependencies buildDependencies features;
  };
  iovec_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iovec";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "14fns3g3arbql6lkczf2gbbzaqh22mfv7y1wq5rr2y8jhh5m8jmm";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  laptop_stats_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "laptop-stats";
    version = "0.1.0";
    authors = [ "Benjamin Herr <ben@0x539.de>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazycell_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "0.5.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1ds71sc24vnhfy0ys1v46qn7fkcavi4brsk4jg3dp8d0yli3sd31";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0hfdh94shvxsdd6jiri0z47v6cyhbsj64w3f39jxvm40zbc4izl4";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  mime_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.3.5";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "032y8q6h7yzmji1cznw04grbi0inbl1m6rcwgsqfwiw8gflcgy0l";
    inherit dependencies buildDependencies features;
  };
  mio_0_6_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio";
    version = "0.6.11";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0maafa27rard6r62rc7iv5mcn2g0vvv6kw5as1kbf7mr4q1ph6sm";
    inherit dependencies buildDependencies features;
  };
  miow_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miow";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
    inherit dependencies buildDependencies features;
  };
  net2_0_2_31_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "net2";
    version = "0.2.31";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "13mphllfcbybsdqyi1jb3kyqx65m8ch07drr59a4wb3yl89awm7y";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0lnxcavz5nqxypjyz6isffqiyxb3h0021nkn8djsl33a4qd4pxv6";
    inherit dependencies buildDependencies features;
  };
  prometheus_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "prometheus";
    version = "0.3.6";
    authors = [ "overvenus@gmail.com" "siddontang@gmail.com" ];
    sha256 = "19klm7466mrwpml87a4xi5qrwrsbm55ah0xc5d6a2n18d9fxx0wa";
    inherit dependencies buildDependencies features;
  };
  protobuf_1_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "protobuf";
    version = "1.4.3";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "093fczpx523lm6d7xr5d4mqs88891ay6wk951yck3cavsz35z00b";
    crateBin = [ {  name = "protoc-gen-rust";  path = "protoc-gen-rust.rs"; } {  name = "protobuf-bin-gen-rust-do-not-use";  path = "protobuf-bin-gen-rust-do-not-use.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  quick_error_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "0.2.2";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0r1f4ps998y779qwvnmmxhjq00qh5wxg3m5inswfawg0vr2732db";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bqm3fjww2ivnshzxg54nnn1dxrx1cmvpjc5d50xjvjfg9xjb4b5";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_19_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.19";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19zx65w7rrrfnjifmjp2i80w9bc6ld7pcwnk5hmr9xszmmvhk8zp";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_34_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.34";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "1n8dny2iw79igcqb1dmckq9q078sg4p5mn4wgjsfhfkdkhc196yq";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  relay_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "relay";
    version = "0.1.0";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1gp2qdclrphnkig7sg4ydyf3mwvdb5vgp2sijmbk115qs8lj6h6g";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "096kkcx9j747700fhxj1s4rlwkj21pqjmvj64psdj6bakb2q13nc";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  scoped_tls_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped-tls";
    version = "0.1.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1j8azxa15srljafrg7wc221npvxb3700sbfk6jjav0rw2zclsnf5";
    inherit dependencies buildDependencies features;
  };
  slab_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.3.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0y6lhjggksh57hyfd3l6p9wgv5nhvw9c6djrysq7jnalz8fih21k";
    inherit dependencies buildDependencies features;
  };
  slab_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.4.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1qy2vkgwqgj5z4ygdkh040n9yh1vz80v5flxb1xrvw3i4wxs7yx0";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.2.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0rnsll9af52bpjngz0067dpm1ndqmh76i64a58fc118l4lvnjxw2";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  spin_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "spin";
    version = "0.4.6";
    authors = [ "Mathijs van de Nes <git@mathijs.vd-nes.nl>" "John Ericson <John_Ericson@Yahoo.com>" ];
    sha256 = "1mp30r3pxb38m6mszcgn6136d1r162fwcidg3y4d9rym21hmialj";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  structopt_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt";
    version = "0.2.10";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" "others" ];
    sha256 = "0bnhmx7i23a65vn0wp0rrll0rxlznlnia5kn20rip2870agmjfm8";
    inherit dependencies buildDependencies features;
  };
  structopt_derive_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt-derive";
    version = "0.2.10";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "1sck1szr077c2sb7ri896gyhycicbwzi2x7yx3zmy6r1m42l39n0";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1p9wa5h8p3djkhjrjc5bsbmkpylig3h5r0kkrkgv7rpfb4rpzvmp";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  synstructure_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synstructure";
    version = "0.6.1";
    authors = [ "Michael Layzell <michael@thelayzells.com>" ];
    sha256 = "1xnyw58va9zcqi4vvpnmpllacdj2a0mvy0cbd698izmr4qs92xlk";
    inherit dependencies buildDependencies features;
  };
  take_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "take";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17rfh39di5n8w9aghpic2r94cndi3dr04l60nkjylmxfxr3iwlhd";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  tokio_core_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-core";
    version = "0.1.11";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1fa740i9pb3f3sw8mxilr2milgb5sh2rp1lgq1w0zpvr5vkx154d";
    inherit dependencies buildDependencies features;
  };
  tokio_io_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-io";
    version = "0.1.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0cq5m0mvkn6kxqw7qnwliq3yimxdbcqfdlwn7xkrik8w8xlb3m6p";
    inherit dependencies buildDependencies features;
  };
  tokio_proto_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-proto";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "030q9h8pn1ngm80klff5irglxxki60hf5maw0mppmmr46k773z66";
    inherit dependencies buildDependencies features;
  };
  tokio_service_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-service";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c85wm5qz9fabg0k6k763j89m43n6max72d3a8sxcs940id6qmih";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.3";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.3";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0f49a8dxxbh16s9n9q7sckdzyprqpdm62nh6w9cj5h3cdfmrsvrn";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.3.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1q9xhkhv1pd5kixnh1qkbim4196khywh63avv77z0j4394dq6vns";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.3.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "052jwc587hijmcyb6bwplkibv76bihqvc1pphxypy123yga2wiy3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  ws2_32_sys_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ws2_32-sys";
    version = "0.2.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
    libName = "ws2_32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_10_2 = { features?(ansi_term_0_10_2_features {}) }: ansi_term_0_10_2_ {};
  ansi_term_0_10_2_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = (f.ansi_term_0_10_2.default or true);
  }) [];
  atty_0_2_10 = { features?(atty_0_2_10_features {}) }: atty_0_2_10_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_3 ]) else []);
  };
  atty_0_2_10_features = f: updateFeatures f (rec {
    atty_0_2_10.default = (f.atty_0_2_10.default or true);
    libc_0_2_35.default = (f.libc_0_2_35.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_3.consoleapi = true;
    winapi_0_3_3.default = true;
    winapi_0_3_3.minwinbase = true;
    winapi_0_3_3.minwindef = true;
    winapi_0_3_3.processenv = true;
    winapi_0_3_3.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_35_features winapi_0_3_3_features ];
  backtrace_0_3_5 = { features?(backtrace_0_3_5_features {}) }: backtrace_0_3_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.winapi or false then [ winapi_0_3_3 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_5 or {});
  };
  backtrace_0_3_5_features = f: updateFeatures f (rec {
    backtrace_0_3_5.addr2line =
      (f.backtrace_0_3_5.addr2line or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.backtrace-sys =
      (f.backtrace_0_3_5.backtrace-sys or false) ||
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (backtrace_0_3_5.libbacktrace or false);
    backtrace_0_3_5.coresymbolication =
      (f.backtrace_0_3_5.coresymbolication or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.dbghelp =
      (f.backtrace_0_3_5.dbghelp or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.default = (f.backtrace_0_3_5.default or true);
    backtrace_0_3_5.dladdr =
      (f.backtrace_0_3_5.dladdr or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.findshlibs =
      (f.backtrace_0_3_5.findshlibs or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.libbacktrace =
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.libunwind =
      (f.backtrace_0_3_5.libunwind or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.rustc-serialize =
      (f.backtrace_0_3_5.rustc-serialize or false) ||
      (f.backtrace_0_3_5.serialize-rustc or false) ||
      (backtrace_0_3_5.serialize-rustc or false);
    backtrace_0_3_5.serde =
      (f.backtrace_0_3_5.serde or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.serde_derive =
      (f.backtrace_0_3_5.serde_derive or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.winapi =
      (f.backtrace_0_3_5.winapi or false) ||
      (f.backtrace_0_3_5.dbghelp or false) ||
      (backtrace_0_3_5.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_35.default = true;
    rustc_demangle_0_1_5.default = true;
    winapi_0_3_3.dbghelp = true;
    winapi_0_3_3.default = true;
    winapi_0_3_3.minwindef = true;
    winapi_0_3_3.processthreadsapi = true;
    winapi_0_3_3.std = true;
    winapi_0_3_3.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_5_features backtrace_sys_0_1_16_features libc_0_2_35_features winapi_0_3_3_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_35 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_3 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_3.default = true;
    libc_0_2_35.default = true;
  }) [ libc_0_2_35_features cc_1_0_3_features ];
  base64_0_9_0 = { features?(base64_0_9_0_features {}) }: base64_0_9_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 safemem_0_2_0 ]);
  };
  base64_0_9_0_features = f: updateFeatures f (rec {
    base64_0_9_0.default = (f.base64_0_9_0.default or true);
    byteorder_1_2_1.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_1_features safemem_0_2_0_features ];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  byteorder_1_2_1 = { features?(byteorder_1_2_1_features {}) }: byteorder_1_2_1_ {
    features = mkFeatures (features.byteorder_1_2_1 or {});
  };
  byteorder_1_2_1_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = (f.byteorder_1_2_1.default or true);
    byteorder_1_2_1.std =
      (f.byteorder_1_2_1.std or false) ||
      (f.byteorder_1_2_1.default or false) ||
      (byteorder_1_2_1.default or false);
  }) [];
  bytes_0_4_5 = { features?(bytes_0_4_5_features {}) }: bytes_0_4_5_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 iovec_0_1_1 ]);
  };
  bytes_0_4_5_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = true;
    bytes_0_4_5.default = (f.bytes_0_4_5.default or true);
    iovec_0_1_1.default = true;
  }) [ byteorder_1_2_1_features iovec_0_1_1_features ];
  cc_1_0_3 = { features?(cc_1_0_3_features {}) }: cc_1_0_3_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_3 or {});
  };
  cc_1_0_3_features = f: updateFeatures f (rec {
    cc_1_0_3.default = (f.cc_1_0_3.default or true);
    cc_1_0_3.rayon =
      (f.cc_1_0_3.rayon or false) ||
      (f.cc_1_0_3.parallel or false) ||
      (cc_1_0_3.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  clap_2_30_0 = { features?(clap_2_30_0_features {}) }: clap_2_30_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_5 ]
      ++ (if features.clap_2_30_0.atty or false then [ atty_0_2_10 ] else [])
      ++ (if features.clap_2_30_0.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_30_0.vec_map or false then [ vec_map_0_8_1 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_30_0.ansi_term or false then [ ansi_term_0_10_2 ] else [])) else []);
    features = mkFeatures (features.clap_2_30_0 or {});
  };
  clap_2_30_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    atty_0_2_10.default = true;
    bitflags_1_0_1.default = true;
    clap_2_30_0.ansi_term =
      (f.clap_2_30_0.ansi_term or false) ||
      (f.clap_2_30_0.color or false) ||
      (clap_2_30_0.color or false);
    clap_2_30_0.atty =
      (f.clap_2_30_0.atty or false) ||
      (f.clap_2_30_0.color or false) ||
      (clap_2_30_0.color or false);
    clap_2_30_0.clippy =
      (f.clap_2_30_0.clippy or false) ||
      (f.clap_2_30_0.lints or false) ||
      (clap_2_30_0.lints or false);
    clap_2_30_0.color =
      (f.clap_2_30_0.color or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.default = (f.clap_2_30_0.default or true);
    clap_2_30_0.strsim =
      (f.clap_2_30_0.strsim or false) ||
      (f.clap_2_30_0.suggestions or false) ||
      (clap_2_30_0.suggestions or false);
    clap_2_30_0.suggestions =
      (f.clap_2_30_0.suggestions or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.term_size =
      (f.clap_2_30_0.term_size or false) ||
      (f.clap_2_30_0.wrap_help or false) ||
      (clap_2_30_0.wrap_help or false);
    clap_2_30_0.vec_map =
      (f.clap_2_30_0.vec_map or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.yaml =
      (f.clap_2_30_0.yaml or false) ||
      (f.clap_2_30_0.doc or false) ||
      (clap_2_30_0.doc or false);
    clap_2_30_0.yaml-rust =
      (f.clap_2_30_0.yaml-rust or false) ||
      (f.clap_2_30_0.yaml or false) ||
      (clap_2_30_0.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_30_0.wrap_help or false) ||
      (f.clap_2_30_0.wrap_help or false);
    unicode_width_0_1_5.default = true;
    vec_map_0_8_1.default = true;
  }) [ atty_0_2_10_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_5_features vec_map_0_8_1_features ansi_term_0_10_2_features ];
  failure_0_1_1 = { features?(failure_0_1_1_features {}) }: failure_0_1_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.failure_0_1_1.backtrace or false then [ backtrace_0_3_5 ] else [])
      ++ (if features.failure_0_1_1.failure_derive or false then [ failure_derive_0_1_1 ] else []));
    features = mkFeatures (features.failure_0_1_1 or {});
  };
  failure_0_1_1_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    failure_0_1_1.backtrace =
      (f.failure_0_1_1.backtrace or false) ||
      (f.failure_0_1_1.std or false) ||
      (failure_0_1_1.std or false);
    failure_0_1_1.default = (f.failure_0_1_1.default or true);
    failure_0_1_1.derive =
      (f.failure_0_1_1.derive or false) ||
      (f.failure_0_1_1.default or false) ||
      (failure_0_1_1.default or false);
    failure_0_1_1.failure_derive =
      (f.failure_0_1_1.failure_derive or false) ||
      (f.failure_0_1_1.derive or false) ||
      (failure_0_1_1.derive or false);
    failure_0_1_1.std =
      (f.failure_0_1_1.std or false) ||
      (f.failure_0_1_1.default or false) ||
      (failure_0_1_1.default or false);
    failure_derive_0_1_1.default = true;
  }) [ backtrace_0_3_5_features failure_derive_0_1_1_features ];
  failure_derive_0_1_1 = { features?(failure_derive_0_1_1_features {}) }: failure_derive_0_1_1_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 synstructure_0_6_1 ]);
    features = mkFeatures (features.failure_derive_0_1_1 or {});
  };
  failure_derive_0_1_1_features = f: updateFeatures f (rec {
    failure_derive_0_1_1.default = (f.failure_derive_0_1_1.default or true);
    failure_derive_0_1_1.std =
      (f.failure_derive_0_1_1.std or false) ||
      (f.failure_derive_0_1_1.default or false) ||
      (failure_derive_0_1_1.default or false);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    synstructure_0_6_1.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features synstructure_0_6_1_features ];
  fnv_1_0_6 = { features?(fnv_1_0_6_features {}) }: fnv_1_0_6_ {};
  fnv_1_0_6_features = f: updateFeatures f (rec {
    fnv_1_0_6.default = (f.fnv_1_0_6.default or true);
  }) [];
  fuchsia_zircon_0_2_1 = { features?(fuchsia_zircon_0_2_1_features {}) }: fuchsia_zircon_0_2_1_ {
    dependencies = mapFeatures features ([ fuchsia_zircon_sys_0_2_0 ]);
  };
  fuchsia_zircon_0_2_1_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_2_1.default = (f.fuchsia_zircon_0_2_1.default or true);
    fuchsia_zircon_sys_0_2_0.default = true;
  }) [ fuchsia_zircon_sys_0_2_0_features ];
  fuchsia_zircon_0_3_2 = { features?(fuchsia_zircon_0_3_2_features {}) }: fuchsia_zircon_0_3_2_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_2 ]);
  };
  fuchsia_zircon_0_3_2_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_2.default = (f.fuchsia_zircon_0_3_2.default or true);
    fuchsia_zircon_sys_0_3_2.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_2_features ];
  fuchsia_zircon_sys_0_2_0 = { features?(fuchsia_zircon_sys_0_2_0_features {}) }: fuchsia_zircon_sys_0_2_0_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 ]);
  };
  fuchsia_zircon_sys_0_2_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    fuchsia_zircon_sys_0_2_0.default = (f.fuchsia_zircon_sys_0_2_0.default or true);
  }) [ bitflags_0_7_0_features ];
  fuchsia_zircon_sys_0_3_2 = { features?(fuchsia_zircon_sys_0_3_2_features {}) }: fuchsia_zircon_sys_0_3_2_ {};
  fuchsia_zircon_sys_0_3_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_2.default = (f.fuchsia_zircon_sys_0_3_2.default or true);
  }) [];
  futures_0_1_17 = { features?(futures_0_1_17_features {}) }: futures_0_1_17_ {
    features = mkFeatures (features.futures_0_1_17 or {});
  };
  futures_0_1_17_features = f: updateFeatures f (rec {
    futures_0_1_17.default = (f.futures_0_1_17.default or true);
    futures_0_1_17.use_std =
      (f.futures_0_1_17.use_std or false) ||
      (f.futures_0_1_17.default or false) ||
      (futures_0_1_17.default or false);
    futures_0_1_17.with-deprecated =
      (f.futures_0_1_17.with-deprecated or false) ||
      (f.futures_0_1_17.default or false) ||
      (futures_0_1_17.default or false);
  }) [];
  futures_cpupool_0_1_8 = { features?(futures_cpupool_0_1_8_features {}) }: futures_cpupool_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_17 num_cpus_1_8_0 ]);
    features = mkFeatures (features.futures_cpupool_0_1_8 or {});
  };
  futures_cpupool_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_17.default = (f.futures_0_1_17.default or false);
    futures_0_1_17.use_std = true;
    futures_0_1_17.with-deprecated =
      (f.futures_0_1_17.with-deprecated or false) ||
      (futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.with-deprecated or false);
    futures_cpupool_0_1_8.default = (f.futures_cpupool_0_1_8.default or true);
    futures_cpupool_0_1_8.with-deprecated =
      (f.futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.default or false) ||
      (futures_cpupool_0_1_8.default or false);
    num_cpus_1_8_0.default = true;
  }) [ futures_0_1_17_features num_cpus_1_8_0_features ];
  httparse_1_2_3 = { features?(httparse_1_2_3_features {}) }: httparse_1_2_3_ {
    features = mkFeatures (features.httparse_1_2_3 or {});
  };
  httparse_1_2_3_features = f: updateFeatures f (rec {
    httparse_1_2_3.default = (f.httparse_1_2_3.default or true);
    httparse_1_2_3.std =
      (f.httparse_1_2_3.std or false) ||
      (f.httparse_1_2_3.default or false) ||
      (httparse_1_2_3.default or false);
  }) [];
  hyper_0_11_10 = { features?(hyper_0_11_10_features {}) }: hyper_0_11_10_ {
    dependencies = mapFeatures features ([ base64_0_9_0 bytes_0_4_5 futures_0_1_17 futures_cpupool_0_1_8 httparse_1_2_3 language_tags_0_2_2 log_0_3_9 mime_0_3_5 percent_encoding_1_0_1 relay_0_1_0 time_0_1_39 tokio_core_0_1_11 tokio_io_0_1_4 tokio_proto_0_1_1 tokio_service_0_1_0 unicase_2_1_0 ]);
    features = mkFeatures (features.hyper_0_11_10 or {});
  };
  hyper_0_11_10_features = f: updateFeatures f (rec {
    base64_0_9_0.default = true;
    bytes_0_4_5.default = true;
    futures_0_1_17.default = true;
    futures_cpupool_0_1_8.default = true;
    httparse_1_2_3.default = true;
    hyper_0_11_10.default = (f.hyper_0_11_10.default or true);
    hyper_0_11_10.http =
      (f.hyper_0_11_10.http or false) ||
      (f.hyper_0_11_10.compat or false) ||
      (hyper_0_11_10.compat or false);
    hyper_0_11_10.server-proto =
      (f.hyper_0_11_10.server-proto or false) ||
      (f.hyper_0_11_10.default or false) ||
      (hyper_0_11_10.default or false);
    language_tags_0_2_2.default = true;
    log_0_3_9.default = true;
    mime_0_3_5.default = true;
    percent_encoding_1_0_1.default = true;
    relay_0_1_0.default = true;
    time_0_1_39.default = true;
    tokio_core_0_1_11.default = true;
    tokio_io_0_1_4.default = true;
    tokio_proto_0_1_1.default = true;
    tokio_service_0_1_0.default = true;
    unicase_2_1_0.default = true;
  }) [ base64_0_9_0_features bytes_0_4_5_features futures_0_1_17_features futures_cpupool_0_1_8_features httparse_1_2_3_features language_tags_0_2_2_features log_0_3_9_features mime_0_3_5_features percent_encoding_1_0_1_features relay_0_1_0_features time_0_1_39_features tokio_core_0_1_11_features tokio_io_0_1_4_features tokio_proto_0_1_1_features tokio_service_0_1_0_features unicase_2_1_0_features ];
  iovec_0_1_1 = { features?(iovec_0_1_1_features {}) }: iovec_0_1_1_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  iovec_0_1_1_features = f: updateFeatures f (rec {
    iovec_0_1_1.default = (f.iovec_0_1_1.default or true);
    libc_0_2_35.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_35_features winapi_0_2_8_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  laptop_stats_0_1_0 = { features?(laptop_stats_0_1_0_features {}) }: laptop_stats_0_1_0_ {
    dependencies = mapFeatures features ([ failure_0_1_1 hyper_0_11_10 prometheus_0_3_6 structopt_0_2_10 ]);
  };
  laptop_stats_0_1_0_features = f: updateFeatures f (rec {
    failure_0_1_1.default = true;
    hyper_0_11_10.default = true;
    laptop_stats_0_1_0.default = (f.laptop_stats_0_1_0.default or true);
    prometheus_0_3_6.default = true;
    structopt_0_2_10.default = true;
  }) [ failure_0_1_1_features hyper_0_11_10_features prometheus_0_3_6_features structopt_0_2_10_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazycell_0_5_1 = { features?(lazycell_0_5_1_features {}) }: lazycell_0_5_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_0_5_1 or {});
  };
  lazycell_0_5_1_features = f: updateFeatures f (rec {
    lazycell_0_5_1.clippy =
      (f.lazycell_0_5_1.clippy or false) ||
      (f.lazycell_0_5_1.nightly-testing or false) ||
      (lazycell_0_5_1.nightly-testing or false);
    lazycell_0_5_1.default = (f.lazycell_0_5_1.default or true);
    lazycell_0_5_1.nightly =
      (f.lazycell_0_5_1.nightly or false) ||
      (f.lazycell_0_5_1.nightly-testing or false) ||
      (lazycell_0_5_1.nightly-testing or false);
  }) [];
  libc_0_2_35 = { features?(libc_0_2_35_features {}) }: libc_0_2_35_ {
    features = mkFeatures (features.libc_0_2_35 or {});
  };
  libc_0_2_35_features = f: updateFeatures f (rec {
    libc_0_2_35.default = (f.libc_0_2_35.default or true);
    libc_0_2_35.use_std =
      (f.libc_0_2_35.use_std or false) ||
      (f.libc_0_2_35.default or false) ||
      (libc_0_2_35.default or false);
  }) [];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  mime_0_3_5 = { features?(mime_0_3_5_features {}) }: mime_0_3_5_ {
    dependencies = mapFeatures features ([ unicase_2_1_0 ]);
  };
  mime_0_3_5_features = f: updateFeatures f (rec {
    mime_0_3_5.default = (f.mime_0_3_5.default or true);
    unicase_2_1_0.default = true;
  }) [ unicase_2_1_0_features ];
  mio_0_6_11 = { features?(mio_0_6_11_features {}) }: mio_0_6_11_ {
    dependencies = mapFeatures features ([ iovec_0_1_1 lazycell_0_5_1 log_0_3_9 net2_0_2_31 slab_0_3_0 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_2_1 fuchsia_zircon_sys_0_2_0 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 miow_0_2_1 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.mio_0_6_11 or {});
  };
  mio_0_6_11_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_2_1.default = true;
    fuchsia_zircon_sys_0_2_0.default = true;
    iovec_0_1_1.default = true;
    kernel32_sys_0_2_2.default = true;
    lazycell_0_5_1.default = true;
    libc_0_2_35.default = true;
    log_0_3_9.default = true;
    mio_0_6_11.default = (f.mio_0_6_11.default or true);
    mio_0_6_11.with-deprecated =
      (f.mio_0_6_11.with-deprecated or false) ||
      (f.mio_0_6_11.default or false) ||
      (mio_0_6_11.default or false);
    miow_0_2_1.default = true;
    net2_0_2_31.default = true;
    slab_0_3_0.default = true;
    winapi_0_2_8.default = true;
  }) [ iovec_0_1_1_features lazycell_0_5_1_features log_0_3_9_features net2_0_2_31_features slab_0_3_0_features fuchsia_zircon_0_2_1_features fuchsia_zircon_sys_0_2_0_features libc_0_2_35_features kernel32_sys_0_2_2_features miow_0_2_1_features winapi_0_2_8_features ];
  miow_0_2_1 = { features?(miow_0_2_1_features {}) }: miow_0_2_1_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 net2_0_2_31 winapi_0_2_8 ws2_32_sys_0_2_1 ]);
  };
  miow_0_2_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    miow_0_2_1.default = (f.miow_0_2_1.default or true);
    net2_0_2_31.default = (f.net2_0_2_31.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ kernel32_sys_0_2_2_features net2_0_2_31_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  net2_0_2_31 = { features?(net2_0_2_31_features {}) }: net2_0_2_31_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ws2_32_sys_0_2_1 ]) else [])
      ++ (if kernel == "i686-apple-darwin" then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "i686-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "x86_64-apple-darwin" then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "x86_64-unknown-linux-gnu" then mapFeatures features ([ libc_0_2_35 ]) else []);
    features = mkFeatures (features.net2_0_2_31 or {});
  };
  net2_0_2_31_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_35.default = true;
    net2_0_2_31.default = (f.net2_0_2_31.default or true);
    net2_0_2_31.duration =
      (f.net2_0_2_31.duration or false) ||
      (f.net2_0_2_31.default or false) ||
      (net2_0_2_31.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ cfg_if_0_1_2_features libc_0_2_35_features kernel32_sys_0_2_2_features winapi_0_2_8_features ws2_32_sys_0_2_1_features libc_0_2_35_features libc_0_2_35_features libc_0_2_35_features libc_0_2_35_features ];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_35 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_35.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_35_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  proc_macro2_0_4_6 = { features?(proc_macro2_0_4_6_features {}) }: proc_macro2_0_4_6_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_6 or {});
  };
  proc_macro2_0_4_6_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or true);
    proc_macro2_0_4_6.proc-macro =
      (f.proc_macro2_0_4_6.proc-macro or false) ||
      (f.proc_macro2_0_4_6.default or false) ||
      (proc_macro2_0_4_6.default or false) ||
      (f.proc_macro2_0_4_6.nightly or false) ||
      (proc_macro2_0_4_6.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  prometheus_0_3_6 = { features?(prometheus_0_3_6_features {}) }: prometheus_0_3_6_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 fnv_1_0_6 lazy_static_0_2_11 protobuf_1_4_3 quick_error_0_2_2 spin_0_4_6 ])
      ++ (if kernel == "linux" then mapFeatures features ([]) else []);
    features = mkFeatures (features.prometheus_0_3_6 or {});
  };
  prometheus_0_3_6_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    fnv_1_0_6.default = true;
    lazy_static_0_2_11.default = true;
    prometheus_0_3_6.clippy =
      (f.prometheus_0_3_6.clippy or false) ||
      (f.prometheus_0_3_6.dev or false) ||
      (prometheus_0_3_6.dev or false);
    prometheus_0_3_6.default = (f.prometheus_0_3_6.default or true);
    prometheus_0_3_6.hyper =
      (f.prometheus_0_3_6.hyper or false) ||
      (f.prometheus_0_3_6.push or false) ||
      (prometheus_0_3_6.push or false);
    prometheus_0_3_6.libc =
      (f.prometheus_0_3_6.libc or false) ||
      (f.prometheus_0_3_6.nightly or false) ||
      (prometheus_0_3_6.nightly or false) ||
      (f.prometheus_0_3_6.process or false) ||
      (prometheus_0_3_6.process or false) ||
      (f.prometheus_0_3_6.push or false) ||
      (prometheus_0_3_6.push or false);
    prometheus_0_3_6.procinfo =
      (f.prometheus_0_3_6.procinfo or false) ||
      (f.prometheus_0_3_6.process or false) ||
      (prometheus_0_3_6.process or false);
    protobuf_1_4_3.default = true;
    quick_error_0_2_2.default = true;
    spin_0_4_6.default = (f.spin_0_4_6.default or false);
    spin_0_4_6.unstable =
      (f.spin_0_4_6.unstable or false) ||
      (prometheus_0_3_6.nightly or false) ||
      (f.prometheus_0_3_6.nightly or false);
  }) [ cfg_if_0_1_2_features fnv_1_0_6_features lazy_static_0_2_11_features protobuf_1_4_3_features quick_error_0_2_2_features spin_0_4_6_features ];
  protobuf_1_4_3 = { features?(protobuf_1_4_3_features {}) }: protobuf_1_4_3_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.protobuf_1_4_3 or {});
  };
  protobuf_1_4_3_features = f: updateFeatures f (rec {
    protobuf_1_4_3.bytes =
      (f.protobuf_1_4_3.bytes or false) ||
      (f.protobuf_1_4_3.with-bytes or false) ||
      (protobuf_1_4_3.with-bytes or false);
    protobuf_1_4_3.default = (f.protobuf_1_4_3.default or true);
  }) [];
  quick_error_0_2_2 = { features?(quick_error_0_2_2_features {}) }: quick_error_0_2_2_ {};
  quick_error_0_2_2_features = f: updateFeatures f (rec {
    quick_error_0_2_2.default = (f.quick_error_0_2_2.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_6_3 = { features?(quote_0_6_3_features {}) }: quote_0_6_3_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 ]);
    features = mkFeatures (features.quote_0_6_3 or {});
  };
  quote_0_6_3_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or false);
    proc_macro2_0_4_6.proc-macro =
      (f.proc_macro2_0_4_6.proc-macro or false) ||
      (quote_0_6_3.proc-macro or false) ||
      (f.quote_0_6_3.proc-macro or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or true);
    quote_0_6_3.proc-macro =
      (f.quote_0_6_3.proc-macro or false) ||
      (f.quote_0_6_3.default or false) ||
      (quote_0_6_3.default or false);
  }) [ proc_macro2_0_4_6_features ];
  rand_0_3_19 = { features?(rand_0_3_19_features {}) }: rand_0_3_19_ {
    dependencies = mapFeatures features ([ libc_0_2_35 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_2 ]) else []);
    features = mkFeatures (features.rand_0_3_19 or {});
  };
  rand_0_3_19_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_2.default = true;
    libc_0_2_35.default = true;
    rand_0_3_19.default = (f.rand_0_3_19.default or true);
    rand_0_3_19.i128_support =
      (f.rand_0_3_19.i128_support or false) ||
      (f.rand_0_3_19.nightly or false) ||
      (rand_0_3_19.nightly or false);
  }) [ libc_0_2_35_features fuchsia_zircon_0_3_2_features ];
  redox_syscall_0_1_34 = { features?(redox_syscall_0_1_34_features {}) }: redox_syscall_0_1_34_ {};
  redox_syscall_0_1_34_features = f: updateFeatures f (rec {
    redox_syscall_0_1_34.default = (f.redox_syscall_0_1_34.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_34 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_34.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_34_features ];
  relay_0_1_0 = { features?(relay_0_1_0_features {}) }: relay_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_17 ]);
  };
  relay_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_17.default = true;
    relay_0_1_0.default = (f.relay_0_1_0.default or true);
  }) [ futures_0_1_17_features ];
  rustc_demangle_0_1_5 = { features?(rustc_demangle_0_1_5_features {}) }: rustc_demangle_0_1_5_ {};
  rustc_demangle_0_1_5_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_5.default = (f.rustc_demangle_0_1_5.default or true);
  }) [];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  scoped_tls_0_1_0 = { features?(scoped_tls_0_1_0_features {}) }: scoped_tls_0_1_0_ {};
  scoped_tls_0_1_0_features = f: updateFeatures f (rec {
    scoped_tls_0_1_0.default = (f.scoped_tls_0_1_0.default or true);
  }) [];
  slab_0_3_0 = { features?(slab_0_3_0_features {}) }: slab_0_3_0_ {};
  slab_0_3_0_features = f: updateFeatures f (rec {
    slab_0_3_0.default = (f.slab_0_3_0.default or true);
  }) [];
  slab_0_4_0 = { features?(slab_0_4_0_features {}) }: slab_0_4_0_ {};
  slab_0_4_0_features = f: updateFeatures f (rec {
    slab_0_4_0.default = (f.slab_0_4_0.default or true);
  }) [];
  smallvec_0_2_1 = { features?(smallvec_0_2_1_features {}) }: smallvec_0_2_1_ {};
  smallvec_0_2_1_features = f: updateFeatures f (rec {
    smallvec_0_2_1.default = (f.smallvec_0_2_1.default or true);
  }) [];
  spin_0_4_6 = { features?(spin_0_4_6_features {}) }: spin_0_4_6_ {
    features = mkFeatures (features.spin_0_4_6 or {});
  };
  spin_0_4_6_features = f: updateFeatures f (rec {
    spin_0_4_6.asm =
      (f.spin_0_4_6.asm or false) ||
      (f.spin_0_4_6.unstable or false) ||
      (spin_0_4_6.unstable or false);
    spin_0_4_6.const_fn =
      (f.spin_0_4_6.const_fn or false) ||
      (f.spin_0_4_6.once or false) ||
      (spin_0_4_6.once or false) ||
      (f.spin_0_4_6.unstable or false) ||
      (spin_0_4_6.unstable or false);
    spin_0_4_6.core_intrinsics =
      (f.spin_0_4_6.core_intrinsics or false) ||
      (f.spin_0_4_6.unstable or false) ||
      (spin_0_4_6.unstable or false);
    spin_0_4_6.default = (f.spin_0_4_6.default or true);
    spin_0_4_6.once =
      (f.spin_0_4_6.once or false) ||
      (f.spin_0_4_6.unstable or false) ||
      (spin_0_4_6.unstable or false);
    spin_0_4_6.unstable =
      (f.spin_0_4_6.unstable or false) ||
      (f.spin_0_4_6.default or false) ||
      (spin_0_4_6.default or false);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  structopt_0_2_10 = { features?(structopt_0_2_10_features {}) }: structopt_0_2_10_ {
    dependencies = mapFeatures features ([ clap_2_30_0 structopt_derive_0_2_10 ]);
    features = mkFeatures (features.structopt_0_2_10 or {});
  };
  structopt_0_2_10_features = f: updateFeatures f (rec {
    clap_2_30_0.color =
      (f.clap_2_30_0.color or false) ||
      (structopt_0_2_10.color or false) ||
      (f.structopt_0_2_10.color or false);
    clap_2_30_0.debug =
      (f.clap_2_30_0.debug or false) ||
      (structopt_0_2_10.debug or false) ||
      (f.structopt_0_2_10.debug or false);
    clap_2_30_0.default =
      (f.clap_2_30_0.default or false) ||
      (structopt_0_2_10.default or false) ||
      (f.structopt_0_2_10.default or false) ||
      false;
    clap_2_30_0.doc =
      (f.clap_2_30_0.doc or false) ||
      (structopt_0_2_10.doc or false) ||
      (f.structopt_0_2_10.doc or false);
    clap_2_30_0.lints =
      (f.clap_2_30_0.lints or false) ||
      (structopt_0_2_10.lints or false) ||
      (f.structopt_0_2_10.lints or false);
    clap_2_30_0.no_cargo =
      (f.clap_2_30_0.no_cargo or false) ||
      (structopt_0_2_10.no_cargo or false) ||
      (f.structopt_0_2_10.no_cargo or false);
    clap_2_30_0.suggestions =
      (f.clap_2_30_0.suggestions or false) ||
      (structopt_0_2_10.suggestions or false) ||
      (f.structopt_0_2_10.suggestions or false);
    clap_2_30_0.wrap_help =
      (f.clap_2_30_0.wrap_help or false) ||
      (structopt_0_2_10.wrap_help or false) ||
      (f.structopt_0_2_10.wrap_help or false);
    clap_2_30_0.yaml =
      (f.clap_2_30_0.yaml or false) ||
      (structopt_0_2_10.yaml or false) ||
      (f.structopt_0_2_10.yaml or false);
    structopt_0_2_10.default = (f.structopt_0_2_10.default or true);
    structopt_derive_0_2_10.default = true;
    structopt_derive_0_2_10.nightly =
      (f.structopt_derive_0_2_10.nightly or false) ||
      (structopt_0_2_10.nightly or false) ||
      (f.structopt_0_2_10.nightly or false);
  }) [ clap_2_30_0_features structopt_derive_0_2_10_features ];
  structopt_derive_0_2_10 = { features?(structopt_derive_0_2_10_features {}) }: structopt_derive_0_2_10_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 quote_0_6_3 syn_0_14_2 ]);
    features = mkFeatures (features.structopt_derive_0_2_10 or {});
  };
  structopt_derive_0_2_10_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6.default = true;
    proc_macro2_0_4_6.nightly =
      (f.proc_macro2_0_4_6.nightly or false) ||
      (structopt_derive_0_2_10.nightly or false) ||
      (f.structopt_derive_0_2_10.nightly or false);
    quote_0_6_3.default = true;
    structopt_derive_0_2_10.default = (f.structopt_derive_0_2_10.default or true);
    syn_0_14_2.default = true;
  }) [ proc_macro2_0_4_6_features quote_0_6_3_features syn_0_14_2_features ];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_14_2 = { features?(syn_0_14_2_features {}) }: syn_0_14_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_6 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_2.quote or false then [ quote_0_6_3 ] else []));
    features = mkFeatures (features.syn_0_14_2 or {});
  };
  syn_0_14_2_features = f: updateFeatures f (rec {
    proc_macro2_0_4_6.default = (f.proc_macro2_0_4_6.default or false);
    proc_macro2_0_4_6.proc-macro =
      (f.proc_macro2_0_4_6.proc-macro or false) ||
      (syn_0_14_2.proc-macro or false) ||
      (f.syn_0_14_2.proc-macro or false);
    quote_0_6_3.default = (f.quote_0_6_3.default or false);
    quote_0_6_3.proc-macro =
      (f.quote_0_6_3.proc-macro or false) ||
      (syn_0_14_2.proc-macro or false) ||
      (f.syn_0_14_2.proc-macro or false);
    syn_0_14_2.clone-impls =
      (f.syn_0_14_2.clone-impls or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.default = (f.syn_0_14_2.default or true);
    syn_0_14_2.derive =
      (f.syn_0_14_2.derive or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.parsing =
      (f.syn_0_14_2.parsing or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.printing =
      (f.syn_0_14_2.printing or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.proc-macro =
      (f.syn_0_14_2.proc-macro or false) ||
      (f.syn_0_14_2.default or false) ||
      (syn_0_14_2.default or false);
    syn_0_14_2.quote =
      (f.syn_0_14_2.quote or false) ||
      (f.syn_0_14_2.printing or false) ||
      (syn_0_14_2.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_6_features quote_0_6_3_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  synstructure_0_6_1 = { features?(synstructure_0_6_1_features {}) }: synstructure_0_6_1_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
    features = mkFeatures (features.synstructure_0_6_1 or {});
  };
  synstructure_0_6_1_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.visit = true;
    synstructure_0_6_1.default = (f.synstructure_0_6_1.default or true);
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  take_0_1_0 = { features?(take_0_1_0_features {}) }: take_0_1_0_ {};
  take_0_1_0_features = f: updateFeatures f (rec {
    take_0_1_0.default = (f.take_0_1_0.default or true);
  }) [];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_35 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_34 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_35.default = true;
    redox_syscall_0_1_34.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_35_features redox_syscall_0_1_34_features redox_termios_0_1_1_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_35 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_34 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_3 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_35.default = true;
    redox_syscall_0_1_34.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_3.default = true;
    winapi_0_3_3.minwinbase = true;
    winapi_0_3_3.minwindef = true;
    winapi_0_3_3.ntdef = true;
    winapi_0_3_3.profileapi = true;
    winapi_0_3_3.std = true;
    winapi_0_3_3.sysinfoapi = true;
    winapi_0_3_3.timezoneapi = true;
  }) [ libc_0_2_35_features redox_syscall_0_1_34_features winapi_0_3_3_features ];
  tokio_core_0_1_11 = { features?(tokio_core_0_1_11_features {}) }: tokio_core_0_1_11_ {
    dependencies = mapFeatures features ([ bytes_0_4_5 futures_0_1_17 iovec_0_1_1 log_0_3_9 mio_0_6_11 scoped_tls_0_1_0 slab_0_4_0 tokio_io_0_1_4 ]);
  };
  tokio_core_0_1_11_features = f: updateFeatures f (rec {
    bytes_0_4_5.default = true;
    futures_0_1_17.default = true;
    iovec_0_1_1.default = true;
    log_0_3_9.default = true;
    mio_0_6_11.default = true;
    scoped_tls_0_1_0.default = true;
    slab_0_4_0.default = true;
    tokio_core_0_1_11.default = (f.tokio_core_0_1_11.default or true);
    tokio_io_0_1_4.default = true;
  }) [ bytes_0_4_5_features futures_0_1_17_features iovec_0_1_1_features log_0_3_9_features mio_0_6_11_features scoped_tls_0_1_0_features slab_0_4_0_features tokio_io_0_1_4_features ];
  tokio_io_0_1_4 = { features?(tokio_io_0_1_4_features {}) }: tokio_io_0_1_4_ {
    dependencies = mapFeatures features ([ bytes_0_4_5 futures_0_1_17 log_0_3_9 ]);
  };
  tokio_io_0_1_4_features = f: updateFeatures f (rec {
    bytes_0_4_5.default = true;
    futures_0_1_17.default = true;
    log_0_3_9.default = true;
    tokio_io_0_1_4.default = (f.tokio_io_0_1_4.default or true);
  }) [ bytes_0_4_5_features futures_0_1_17_features log_0_3_9_features ];
  tokio_proto_0_1_1 = { features?(tokio_proto_0_1_1_features {}) }: tokio_proto_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_17 log_0_3_9 net2_0_2_31 rand_0_3_19 slab_0_3_0 smallvec_0_2_1 take_0_1_0 tokio_core_0_1_11 tokio_io_0_1_4 tokio_service_0_1_0 ]);
  };
  tokio_proto_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_17.default = true;
    log_0_3_9.default = true;
    net2_0_2_31.default = true;
    rand_0_3_19.default = true;
    slab_0_3_0.default = true;
    smallvec_0_2_1.default = true;
    take_0_1_0.default = true;
    tokio_core_0_1_11.default = true;
    tokio_io_0_1_4.default = true;
    tokio_proto_0_1_1.default = (f.tokio_proto_0_1_1.default or true);
    tokio_service_0_1_0.default = true;
  }) [ futures_0_1_17_features log_0_3_9_features net2_0_2_31_features rand_0_3_19_features slab_0_3_0_features smallvec_0_2_1_features take_0_1_0_features tokio_core_0_1_11_features tokio_io_0_1_4_features tokio_service_0_1_0_features ];
  tokio_service_0_1_0 = { features?(tokio_service_0_1_0_features {}) }: tokio_service_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_17 ]);
  };
  tokio_service_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_17.default = true;
    tokio_service_0_1_0.default = (f.tokio_service_0_1_0.default or true);
  }) [ futures_0_1_17_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  vec_map_0_8_1 = { features?(vec_map_0_8_1_features {}) }: vec_map_0_8_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_1 or {});
  };
  vec_map_0_8_1_features = f: updateFeatures f (rec {
    vec_map_0_8_1.default = (f.vec_map_0_8_1.default or true);
    vec_map_0_8_1.serde =
      (f.vec_map_0_8_1.serde or false) ||
      (f.vec_map_0_8_1.eders or false) ||
      (vec_map_0_8_1.eders or false);
  }) [];
  version_check_0_1_3 = { features?(version_check_0_1_3_features {}) }: version_check_0_1_3_ {};
  version_check_0_1_3_features = f: updateFeatures f (rec {
    version_check_0_1_3.default = (f.version_check_0_1_3.default or true);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_3 = { features?(winapi_0_3_3_features {}) }: winapi_0_3_3_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_3_2 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_3_2 ]) else []);
    features = mkFeatures (features.winapi_0_3_3 or {});
  };
  winapi_0_3_3_features = f: updateFeatures f (rec {
    winapi_0_3_3.default = (f.winapi_0_3_3.default or true);
    winapi_i686_pc_windows_gnu_0_3_2.default = true;
    winapi_x86_64_pc_windows_gnu_0_3_2.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_3_2_features winapi_x86_64_pc_windows_gnu_0_3_2_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_3_2 = { features?(winapi_i686_pc_windows_gnu_0_3_2_features {}) }: winapi_i686_pc_windows_gnu_0_3_2_ {};
  winapi_i686_pc_windows_gnu_0_3_2_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_3_2.default = (f.winapi_i686_pc_windows_gnu_0_3_2.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_3_2 = { features?(winapi_x86_64_pc_windows_gnu_0_3_2_features {}) }: winapi_x86_64_pc_windows_gnu_0_3_2_ {};
  winapi_x86_64_pc_windows_gnu_0_3_2_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_3_2.default = (f.winapi_x86_64_pc_windows_gnu_0_3_2.default or true);
  }) [];
  ws2_32_sys_0_2_1 = { features?(ws2_32_sys_0_2_1_features {}) }: ws2_32_sys_0_2_1_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ws2_32_sys_0_2_1_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
    ws2_32_sys_0_2_1.default = (f.ws2_32_sys_0_2_1.default or true);
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
}
